ur3_hw:
  remap_source_args:
  - "/ur3_hw/js_pub/joint_states"
  - "/ur3_hw/microinterpolator/follow_joint_trajectory/cancel"
  - "/ur3_hw/microinterpolator/follow_joint_trajectory/feedback"
  - "/ur3_hw/microinterpolator/follow_joint_trajectory/goal"
  - "/ur3_hw/microinterpolator/follow_joint_trajectory/result"
  - "/ur3_hw/microinterpolator/follow_joint_trajectory/status"

  - "/ur3_hw/microinterpolator/unscaled_joint_target/joint_states"

  - "/ur3_hw/cartesian_position/relative_move/cancel"
  - "/ur3_hw/cartesian_position/relative_move/feedback"
  - "/ur3_hw/cartesian_position/relative_move/goal"
  - "/ur3_hw/cartesian_position/relative_move/result"
  - "/ur3_hw/cartesian_position/relative_move/status"

  remap_target_args:
  - "/ur3/joint_states"
  - "/manipulator/follow_joint_trajectory/cancel"
  - "/manipulator/follow_joint_trajectory/feedback"
  - "/manipulator/follow_joint_trajectory/goal"
  - "/manipulator/follow_joint_trajectory/result"
  - "/manipulator/follow_joint_trajectory/status"

  - "/unscaled_joint_target"
  - "/relative_move/cancel"
  - "/relative_move/feedback"
  - "/relative_move/goal"
  - "/relative_move/result"
  - "/relative_move/status"

  js_pub:
    appenders: [file, screen]
    levels: [trace, info]
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%L][%c] %m%n"
    file_name: "ur3_hw_js_pub"

    type: cnr/control/JointStatePublisher
    controlled_joint: all
    base_link: "base_link"
    tool_link: "tool0"
    robot_description_param: /robot_description
    robot_description_planning_param: /robot_description_planning

  ft_pub:
    appenders: [file, screen]
    levels: [trace, info]
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%L][%c] %m%n"
    file_name: "ur3_hw_ft_pub"

    type: "cnr/control/ForceTorquePublisher"
    name: wrench
    published_topic: "/ur3/wrench"

  cartesian_velocity:
    appenders: [file, screen]
    levels: [debug, info]
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%L][%c] %m%n"
    file_name: "cartesian_velocity"

    type: cnr/control/CartesianVelocityController
    controlled_joints : all
    kin_update_period : 0.008
    target_twist_topic: /target_cart_twist  # setpoint twist topic name

  cartesian_position:
    appenders: [file, screen]
    levels: [debug, info]
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%L][%c] %m%n"
    file_name: "cartesian_position"

    type: cnr/control/CartesianPositionController
    controlled_joints : all
    kin_update_period : 0.008
    max_cartesian_linear_speed: 0.5
    max_cartesian_linear_acceleration: 0.75

  ctrl1:
    type:        cnr/control/OpenLoopPositionController
    setpoint_topic_name: "/joint_target"
    controlled_joint: all
    enable_setpoint_watchdog: false

  microinterpolator:
    type: "cnr/control/ScaledFJTPosVelEffController"
    controlled_joints: all
    continuity_order: 1
    appenders: [file, screen]
    levels: [debug, info]
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%L][%c] %m%n"
    file_name: "microinterpolator"

  posvel_ctrl:
    appenders: [file, screen]
    levels: [trace, info]
    pattern_layout: "[%5p][%d{HH:mm:ss,SSS}][%M:%L][%c] %m%n"
    file_name: "posvel"
    type: "cnr/control/PositionToVelocityController"
    controlled_joints : all # controlled joints
    setpoint_topic_name: "/joint_target" # name of the JointState topic with provide the position setpoint
    use_target_velocity: true # if true, the velocity feedforward (namely, the velocity field of setpoint_topic_name) is added to the controller output. if false, velocity feedforward is not used.
    antiwindup_ratio: 1.0 #antiwindup_ratio = T_t/T_i. if you don't know what you're doing keep it equal to 1.0

    position_maximum_error: 1.0 # maximum allowed error, controller goes in error mode if it is exceeded. Error mode will set the command velocity equal to zero.
    position_minimum_error: 0.00001 # minimum error, if the absolute value of error is smaller than this threshold, the error is set equal to 0. It is useful in case of stick-slip to reduce chattering.

    interpolate_setpoint: false # to enable/disable interpolation of setpoint topic if there are not new messages. The interpolation is a first-order-hold, that is: target_position=last_received_target_position+last_received_target_velocity*time_from_last_message. This option is used when the setpoint_topic has a frequency smaller than the controller rate. If disable the last value of target position is used.
    maximum_interpolation_time: 0.01 # maximum time from last message used for interpolation. If time_from_last_message is greater than maximum_interpolation_time, the target position is set as target_position=last_received_target_position+last_received_target_velocity*maximum_interpolation_time.

    pos_filter: {type: "unity", dof: 6} # filter on feedback position, if you don't know what you're doing keep it disable, that is type: unity
    target_pos_filter: {type: "unity", dof: 6} # filter on setpoint position, if you don't know what you're doing keep it disable, that is type: unity
    controller: {type: "proportional_controller", proportional_gain: 0.05, dof: 6} # controller (excluding the integral part). If the lower controllers works properly, a proportional controller should be sufficient. See eigen_control_toolbox to implement advanced controllers.
    integral_controller: {type: "proportional_controller", proportional_gain: 0.0, dof: 6} # controller (excluding the integral part). If the lower controllers works properly, an integral controller should not be required (set it as a constant equal to 0). See eigen_control_toolbox to implement advanced controllers.
    use_target_torque: false
